<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.b2.Sinnanda.mapper.MemberMapper">

	
	<!-- [김영후] Member 휴면계정 해제 -->
	<update id="activeMember" parameterType="int">
		UPDATE
			member
		SET
			member_active = 1
		WHERE
			member_no = #{memberNo}
	</update>

	<!-- [김영후] (스케쥴러) 1년 미접속 회원 휴면 상태변경 -->
	<update id="modifyMemberActive">
		UPDATE 
			member
		SET 
			member_active = 2
		WHERE 
			DATEDIFF(NOW(), last_login_date) > 365
	</update>
  
   <resultMap type="com.b2.Sinnanda.vo.Member" id="resultMember">
      <result column="member_no" property="memberNo"/>
      <result column="member_id" property="memberId"/>
      <result column="member_pw" property="memberPw"/>
      <result column="member_name" property="memberName"/>
      <result column="member_age" property="memberAge"/>
      <result column="member_tel" property="memberTel"/>
      <result column="member_email" property="memberEmail"/>
      <result column="create_date" property="createDate"/>
      <result column="update_date" property="updateDate"/>      
   </resultMap>
    
    <!-- [유동진] 마이페이지 -->
	<select id="selectMyPage" parameterType="int" resultMap="resultMember">
		SELECT
			member_id,
			member_pw,
			member_name,
			member_age,
			member_tel,
			member_email,
			create_date
		FROM member
		WHERE member_no = #{memberNo}
	</select>
  	
	<!-- [유동진] 회원 정보 수정 -->
	<update id="updateMember" parameterType="com.b2.Sinnanda.vo.Member">
		UPDATE member 
	    SET
	        member_id = #{memberId},
	        member_name = #{memberName},
	        member_age = #{memberAge},
	        member_tel = #{memberTel},
	        member_email = #{memberEmail},
	        update_date = #{updateDate}
	    WHERE member_no = #{memberNo}
	</update>
	
	<!-- [유동진] 회원 비밀번호 변경전 현재 비밀번호 확인 -->	
	<!-- [유동진] selectMemberPw Map -->
	<resultMap type="com.b2.Sinnanda.vo.Member" id="selectMemberPwMap">
		<id column="member_pw" property="memberPw"></id>
	</resultMap>
	
	<!-- [유동진] 회원 현재 비밀번호 확인 -->
   	<select id="selectNowMemberPw"  parameterType="int" resultType="com.b2.Sinnanda.vo.Member">
       	SELECT 
			member_pw memberPw
           	FROM member 
        WHERE member_no = #{memberNo}
   </select>
	
	<!-- [유동진] 회원 비밀번호 가져오기 -->
	<select id="selectMemberPw"  parameterType="Map" resultMap="selectMemberPwMap">
		SELECT
			member_pw
			FROM member 
		WHERE member_no = #{memberNo}
	</select>
	
	<!-- [유동진] 회원 비밀번호 변경 -->
	<update id="updateMemberPw" parameterType="com.b2.Sinnanda.vo.Member">
		UPDATE member 
	    SET
	    	member_pw = #{memberPw},
	    	update_date = NOW()
	    WHERE member_no = #{memberNo}
	</update>
	
	<!-- [유동진] My QnA One Map -->
	<resultMap type="com.b2.Sinnanda.vo.Qna" id="MyQnaOneMap">
		<id column="qna_no" property="qnaNo"/>
		<result column="member_no" property="memberNo"/>
		<result column="qna_category" property="qnaCategory"/>
		<result column="qna_title" property="qnaTitle"/>
		<result column="qna_content" property="qnaContent"/>
		<result column="qna_secret" property="qnaSecret"/>
		<result column="create_date" property="createDate"/>
		<result column="update_date" property="updateDate"/>
		<result column="member_name" property="memberName"/>
		<result column="admin_name" property="adminName"/>
		
		<collection property="qnaComments" ofType="com.b2.Sinnanda.vo.QnaComment">
			<result column="admin_no" property="adminNo"/>
			<result column="qna_comment_content" property="qnaCommentContent"/>
			<result column="comment_date" property="commentDate"/>
		</collection>
	</resultMap>
	
	<!-- [유동진] My QnA 상세 조회 -->
	<select id="selectMyQnaOne"  parameterType="Map" resultMap="MyQnaOneMap">
		SELECT 
			q.qna_no, 
			q.member_no, 
			m.member_name, 
			q.qna_category, 
			q.qna_title, 
			q.qna_content, 
			q.qna_secret, 
			q.create_date, 
			q.update_date, 
			c.admin_no, 
			a.admin_name, 
			c.qna_comment_content, 
			c.comment_date
		FROM qna q 
		LEFT JOIN qna_comment c 
			ON q.qna_no = c.qna_no
		LEFT JOIN member m
			ON q.member_no = m.member_no
		LEFT JOIN admin a 
			ON c.admin_no = a.admin_no
		WHERE q.qna_no = #{qnaNo}
	</select>
	
	<!-- [유동진] QnA List Map -->
	<resultMap type="com.b2.Sinnanda.vo.Qna" id="MyQnaListMap">
		<id column="qna_no" property="qnaNo"/>
		<result column="member_no" property="memberNo"/>
		<result column="qna_category" property="qnaCategory"/>
		<result column="qna_title" property="qnaTitle"/>
		<result column="qna_secret" property="qnaSecret"/>
		<result column="create_date" property="createDate"/>
		<result column="member_name" property="memberName"/>
		<collection property="qnaComments" ofType="com.b2.Sinnanda.vo.QnaComment">
			<result column="admin_no" property="adminNo"/>
		</collection>
	</resultMap>
	
	<!-- [유동진] 내가 작성한 QnA 목록 조회 -->
	<select id="selectMyQnaListQnaCategory" parameterType="Map" resultMap="MyQnaListMap">
		SELECT 
         q.qna_no, 
         q.member_no, 
         q.qna_category,
         q.qna_title, 
         q.qna_secret, 
         q.create_date, 
         m.member_name,
         qc.admin_no
      FROM qna q
      LEFT JOIN member m ON q.member_no = m.member_no
      LEFT JOIN qna_comment qc ON q.qna_no = qc.qna_no
      <if test="qnaCategory != null">
         <where>
            q.member_no = #{memberNo} AND qna_category = #{qnaCategory}
         </where>
      </if>
      <if test="qnaCategory == null">
         <where>
            q.member_no = #{memberNo}
         </where>
      </if>
      ORDER BY create_date DESC
      LIMIT #{beginRow}, #{rowPerPage}
	</select>
	
	<!-- [유동진] QnA 갯수 조회 -->
	<select id="selectMyQnaTotalCount" parameterType="String" resultType="int">
		SELECT 
			COUNT(*) 
		FROM qna
		<if test="qnaCategory != null">
			<where>
				qna_category = #{qnaCategory}
			</where>
		</if>
	</select>
	
	<!-- [유동진] 리뷰 List Map -->
	<resultMap type="com.b2.Sinnanda.vo.Review" id="MyReviewListMap">
		<id column="review_no" property="reviewNo"/>
		<result column="review_content" property="reviewContent"/>
		<result column="review_Rank" property="reviewRank"/>
		<result column="review_recommend" property="reviewRecommend"/>
		<result column="create_date" property="createDate"/>
		<result column="member_no" property="memberNo"/>
		<result column="member_name" property="memberName"/>
		<result column="room_name" property="roomName"/>
		<result column="accom_name" property="accomName"/>
		<result column="accom_no" property="accomNo"/>
	</resultMap>
	
	<!-- [유동진] 내가 작성한 리뷰 목록 조회 -->
	<select id="selectMyReviewListReviewRecommend" parameterType="Map" resultMap="MyReviewListMap">
		SELECT 
			m.member_no, 
			m.member_name, 
			ac.accom_name,
			ac.accom_no, 
			r.room_name,
			rev.review_no,
			rev.review_content,
			rev.review_rank,
			rev.review_recommend,
			rev.create_date
		FROM member m 
		JOIN reserve re ON re.member_no = m.member_no
		JOIN payment p ON re.reserve_no = p.reserve_no 
		JOIN review rev ON rev.payment_no = p.payment_no
		JOIN room r ON r.room_no = re.room_no
		JOIN accom ac ON r.accom_no = ac.accom_no
		<if test="reviewRecommend != null">
			<where>
				m.member_no = #{memberNo} AND rev.review_recommend = #{reviewRecommend}
			</where>
		</if>
		<if test="reviewRecommend == null">
         <where>
            m.member_no = #{memberNo}
         </where>
      </if>
		ORDER BY rev.create_date DESC
		LIMIT #{beginRow}, #{rowPerPage}
	</select>
	
	<!-- [유동진] 리뷰 갯수 조회 -->
	<select id="selectMyReviewTotalCount" parameterType="String" resultType="int">
		SELECT 
			COUNT(*) 
		FROM review
		<if test="reviewRecommend != null">
			<where>
				review_recommend = #{reviewRecommend}
			</where>
		</if>
	</select>
	
	<!-- [유동진] 예약내역 Map -->
	<resultMap type="com.b2.Sinnanda.vo.Reserve" id="MyReserveMap">
		<id column="reserve_no" property="reserveNo"/>
		<result column="member_no" property="memberNo"/>
		<result column="room_no" property="roomNo"/>
		<result column="member_name" property="memberName"/>
		<result column="accom_name" property="accomName"/>
		<result column="room_name" property="roomName"/>
		<result column="payment_method" property="paymentMethod"/>
		<result column="payment_price" property="paymentPrice"/>
		<result column="reserve_use" property="reserveUse"/>
		<result column="reserve_info" property="reserveInfo"/>
		<result column="reserve_date" property="reserveDate"/>
		<result column="reserve_cancel_date" property="reserveCancelDate"/>
		<result column="reserve_check_in" property="reserveCheckIn"/>
		<result column="reserve_check_out" property="reserveCheckOut"/>
	</resultMap>
		
	<!-- [유동진] 예약내역 조회 -->
	<select id="selectMyReserveList" parameterType="Map" resultMap="MyReserveMap">
		SELECT 
			re.reserve_no,
			ac.accom_name,
			p.payment_price,
			re.reserve_use
		FROM reserve re
		JOIN payment p ON p.reserve_no = re.reserve_no
		JOIN member m ON re.member_no = m.member_no
		JOIN room r ON r.room_no = re.room_no
		JOIN accom ac ON r.accom_no = ac.accom_no
		<if test="reserveUse != null">
         <where>
            m.member_no = #{memberNo} AND reserve_use = #{reserveUse}
         </where>
      </if>
      <if test="reserveUse == null">
         <where>
            m.member_no = #{memberNo}
         </where>
      </if>	
	</select>
	
	<!-- [유동진] 예약내역 상세조회 -->
	<select id="selectMyReserveOne" parameterType="Map" resultMap="MyReserveMap">
		SELECT 
			re.reserve_no,
			m.member_name,
			ac.accom_name,
			r.room_name,
			p.payment_method,
			p.payment_price,
			re.reserve_use,
			re.reserve_info,
			re.reserve_date,
			re.reserve_cancel_date,
			re.reserve_check_in,
			re.reserve_check_out
		FROM reserve re
		JOIN payment p ON p.reserve_no = re.reserve_no
		JOIN member m ON re.member_no = m.member_no
		JOIN room r ON r.room_no = re.room_no
		JOIN accom ac ON r.accom_no = ac.accom_no
		WHERE re.reserve_no = #{reserveNo};
	</select>
	
	<!-- [유동진] 예약내역 갯수 조회 -->
	<select id="selectMyReserveTotalCount" parameterType="String" resultType="int">
		SELECT 
			COUNT(*) 
		FROM reserve
		<if test="reserveUse != null">
			<where>
				reserve_use = #{reserveUse}
			</where>
		</if>
	</select>
	
	<!-- [유동진] 컴플레인Map -->
	<resultMap type="com.b2.Sinnanda.vo.Complain" id="myComplainMap">
		<id column="complain_no" property="complainNo"/>
		<result column="payment_no" property="paymentNo"/>
		<result column="complain_category" property="complainCategory"/>
		<result column="complain_title" property="complainTitle"/>
		<result column="complain_content" property="complainContent"/>
		<result column="create_date" property="createDate"/>
		<result column="update_date" property="updateDate"/>
		<result column="member_name" property="memberName"/>
		<result column="accom_name" property="accomName"/>
		<result column="room_name" property="roomName"/>
		<result column="host_name" property="hostName"/>
		<result column="comment_date" property="commentDate"/>
		<result column="complain_comment_content" property="complainCommentContent"/>
	</resultMap>
	
	<!-- [유동진] 내가 작성한 컴플레인 목록 조회 -->
	<select id="selectMyComplainList" parameterType="Map" resultMap="myComplainMap">
		SELECT 
			c.complain_no,
			c.complain_category,
			c.complain_title,
			c.create_date,
			m.member_name,
			a.accom_name
		FROM complain c
		JOIN payment p ON c.payment_no = p.payment_no 
		JOIN reserve r ON p.reserve_no = r.reserve_no
		JOIN room ro ON ro.room_no = r.room_no
		JOIN accom a ON a.accom_no = ro.accom_no
		JOIN member m ON r.member_no = m.member_no	
		<if test="complainCategory != null">
        	<where>
         		m.member_no = #{memberNo} AND complain_category = #{complainCategory}
         	</where>
      	</if>
      <if test="complainCategory == null">
         <where>
            m.member_no = #{memberNo}
         </where>
      </if>
	</select>
	
	<!-- [유동진] 내가 작성한 컴플레인 갯수 -->
	<select id="selectMyComplainTotalCount" parameterType="String" resultType="int">
		SELECT 
			COUNT(*) 
		FROM complain
		<if test="complainCategory != null">
			<where>
				complain_category = #{complainCategory}
			</where>
		</if>
	</select>
	
	<!-- [유동진] 내가 작성한 컴플레인 상세보기 -->
	<select id="selectMyComplainOne" parameterType="Map" resultMap="myComplainMap">
		SELECT 
			c.complain_no, 
			p.payment_no, 
			c.complain_category, 
			c.complain_title,
			c.complain_content, 
			c.create_date, 
			c.update_date, 
			m.member_name, 
			h.host_name,
			a.accom_name, 
			ro.room_name, 
			cc.complain_comment_content,
			cc.comment_date
		FROM complain c
		LEFT JOIN payment p ON c.payment_no = p.payment_no 
		LEFT JOIN reserve r ON p.reserve_no = r.reserve_no
		LEFT JOIN room ro ON ro.room_no = r.room_no
		LEFT JOIN accom a ON a.accom_no = ro.accom_no
		LEFT JOIN member m ON r.member_no = m.member_no
		LEFT JOIN host h ON a.host_no = h.host_no
		LEFT JOIN complain_comment cc ON cc.complain_no = c.complain_no	
		WHERE c.complain_no = #{complainNo}
	</select>
	
	<!-- [김영후] 회원 가입 -->
	<insert id="insertMember" parameterType="com.b2.Sinnanda.vo.Member">
		INSERT INTO 
			member(
				member_id, 
				member_pw, 
				member_name, 
				member_age, 
				member_tel, 
				member_email, 
				member_certifycode, 
				create_date, 
				update_date
			) VALUES (
				#{memberId}, 
				#{memberPw}, 
				#{memberName}, 
				#{memberAge}, 
				#{memberTel}, 
				#{memberEmail}, 
				#{memberCertifycode}, 
				NOW(), 
				NOW()
			)
	</insert>
	
	<!-- [김영후] 회원가입 이메일 인증 -->
	<select id="certifyMember" parameterType="com.b2.Sinnanda.vo.Member" resultType="int">
		SELECT COUNT(*) 
		FROM member 
		WHERE 
			member_id = #{memberId}
			AND 
			member_certifycode = #{memberCertifycode}
	</select>
	<!-- [김영후] 로그인 시 회원 이메일 인증여부 확인 21.12.10 -->
	<select id="selectCertifyMember" parameterType="com.b2.Sinnanda.vo.Member" resultType="int">
		SELECT member_active 
		FROM member
		WHERE member_id = #{memberId}	
	</select>
	<!-- [김영후] 인증 된 회원 활성화 -->
	<update id="certifyMemberUpdate" parameterType="com.b2.Sinnanda.vo.Member">
		UPDATE member 
		SET member_active = 1
		WHERE 
			member_id = #{memberId}
	</update>
	
	<!-- [김영후,유동진] 회원 탈퇴 (active 업데이트로 탈퇴처리)-->
	<update id="deleteMember" parameterType="com.b2.Sinnanda.vo.Member">
		UPDATE member
		SET
			member_active = 3,
			update_date = NOW()
		WHERE 
			member_id=#{memberId} AND member_pw=#{memberPw}
	</update>
	
  
	
	<!-- [김영후] 회원가입 시 ID 중복체크 -->
	<select id="checkId" parameterType="String" resultType="int">
		SELECT COUNT(member_id)
		FROM (
			SELECT member_id FROM member WHERE member_id = #{memberId}
			UNION
			SELECT host_id member_id FROM host WHERE host_id = #{memberId}
			UNION
			SELECT admin_id member_id FROM admin WHERE admin_id = #{memberId}
			UNION
			SELECT member_id FROM member_out WHERE member_id = #{memberId}
		) AS u
	</select>
</mapper>